@using System.Globalization
@model iTCShop.Controllers.Response.ResponseListsView;

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Admin Page";
    var i = 0;
    var productTypes = new List<ProductType>();
    var orderStatuses = Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>();

 
    var TotalPages = Model.Products.Count();
    var totalPages = (int)Math.Ceiling((double)TotalPages / 10);
    var paginatedProducts = Model.Products.Skip((1 - 1) * 10).Take(10).ToList();
}
<style>
    body {
        font-family: Arial, sans-serif;
    }

    .table-container {
        margin-top: 50px;
        background-color: #f9f9f9;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }

    .table {
        width: 100%;
        border-collapse: collapse;
    }

        .table thead th {
            background-color: #007bff;
            color: white;
            border: 1px solid #007bff;
        }

        .table tbody tr {
            border: 1px solid #dee2e6;
        }

            .table tbody tr:nth-child(even) {
                background-color: #f2f2f2;
            }

            .table tbody tr:hover {
                background-color: #e9ecef;
            }

        .table tbody td {
            padding: 10px;
            border: 1px solid #dee2e6;
        }

    .product-img {
        max-width: 100px;
        max-height: 100px;
        border-radius: 5px;
    }

    .table-title {
        margin-bottom: 20px;
        font-size: 24px;
        color: #007bff;
    }

    .search-bar {
        margin-bottom: 20px;
        display: flex;
        justify-content: flex-end;
        gap: 10px;
    }

        .search-bar input, .search-bar select, .search-bar button {
            padding: 10px;
            border: 1px solid #dee2e6;
            border-radius: 5px;
        }

        .search-bar select {
            margin-right: 10px;
        }

        .search-bar button {
            background-color: #007bff;
            color: white;
            cursor: pointer;
        }

    .action-buttons {
        display: flex;
        gap: 10px;
    }

        .action-buttons button {
            padding: 5px 10px;
            border: none;
            border-radius: 5px;
            color: white;
            cursor: pointer;
        }

    .edit-btn {
        background-color: #28a745;
    }

    .delete-btn {
        background-color: #dc3545;
    }
</style>

<div class="container table-container">
    <h2 class="table-title">Product List</h2>
    <!-- Existing search and table code here -->

    <table class="table table-striped table-bordered">
        <thead>
            <tr>
                <th>No.</th>
                <th>IMEI</th>
                <th>TypeID</th>
                <th>Status</th>
                <th>Name</th>
                <th>Price</th>
                <th>Description</th>
                <th>Size</th>
                <th>Battery</th>
                <th>Memory</th>
                <th>Color</th>
                <th>RAM</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var product in Model.Products)
            {
                <tr>
                    <td>@(++i)</td>
                    <td>@product.IMEI</td>
                    <td>@product.ProductType.ID</td>
                    <td>@product.Status</td>
                    <td>@product.ProductType.Name</td>
                    <td>@MoneyDTO.Convert(@product.ProductType.Price)</td>
                    <td>@product.ProductType.Description</td>
                    <td>@product.ProductType.Size</td>
                    <td>@product.ProductType.Battery</td>
                    <td>@product.ProductType.Memory</td>
                    <td>@product.ProductType.Color</td>
                    <td>@product.ProductType.RAM</td>
                    <td>
                        <div class="action-buttons">
                            <button type="button" class="edit-btn" data-toggle="modal" data-target="#editProductDiv" onclick="setProductId('@product.IMEI', 'prod')">Edit</button>
                            <form action="/Product/DeleteProduct" method="post" style="display:inline;">
                                <input type="hidden" name="imei" value="@product.IMEI" />
                                <button type="submit" class="delete-btn">Delete</button>
                            </form>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>

<!-- Pagination -->
    <nav aria-label="Page navigation example">
        <ul class="pagination justify-content-center">
            <!-- Previous Button -->
            <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.CurrentPage - 1)" tabindex="-1" aria-disabled="@(Model.CurrentPage == 1 ? "true" : "false")">Previous</a>
            </li>
            
            <!-- Page Numbers -->
            @for (var page = 1; page <= Model.TotalPages; page++)
            {
                <li class="page-item @(Model.CurrentPage == page ? "active" : "")">
                    <a class="page-link" href="?page= @page">@page</a>
                </li>
            }   

            <!-- Next Button -->
            <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
            </li>
        </ul>
    </nav>
    @{
        ViewData["divId"] = "editProductDiv";
        ViewData["formId"] = "editProductForm";
        ViewData["formAction"] = "/Product/UpdateProduct";
        ViewData["buttonText"] = "Save Changes";
        ViewData["functionName"] = "Edit";
        Html.RenderPartial("ProductPartial", Model.ProductTypes);
    }

    @{
        ViewData["divId"] = "addProductDiv";
        ViewData["formId"] = "addProductForm";
        ViewData["formAction"] = "/Product/AddProduct";
        ViewData["buttonText"] = "Add Product";
        ViewData["functionName"] = "Add";
        Html.RenderPartial("ProductPartial", Model.ProductTypes);
    }
</div>

