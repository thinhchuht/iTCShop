@using System.Globalization
@model List<iTCShop.Models.Order>

@{
    ViewData["Title"] = "Orders";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var indexOrderDetail = 0;
    var indexOrder = 0;
    var orderStatuses = Enum.GetValues(typeof(OrderStatus)).Cast<OrderStatus>();
    var isOrder = false;
    if (ViewBag.Sort == "orderID") isOrder = true;
    var isCust = false;
    if (ViewBag.Sort == "customerID") isCust = true;
    // var is1 = false;
    // if (ViewBag.Status == "Pending") is1 = true;
    //  var is2 = false;
    // if (ViewBag.Status == "InProgress") is2 = true;
    // var is3 = false;
    // if (ViewBag.Status == "Completed") is3 = true;
}


<h2>Order Management</h2>
<div class="search-bar" style="display:flex; justify-content: flex-end; height: 50px">
    <form action="/Order/Search" method="get" style="display: flex">
        <select name="status">
            <option value="" disabled selected hidden>Status</option>            
            @{
                for (int i = 1; i < orderStatuses.ToList().Count; i++)
                {
                    <option value="@orderStatuses.ToList()[i]">@orderStatuses.ToList()[i]</option>
                }
            }
        </select>
        <select name="sort">
            <option value="" disabled selected hidden>Type of Search</option>
            <option value="orderID" selected="@isOrder">Order ID</option>
            <option value="customerID" selected="@(isCust)">Customer ID</option>
        </select>

        <input type="text" name="search" placeholder="Search...  " value="@(ViewBag.Search)" />
        <button type="submit">Search</button>
    </form>
</div>

<table class="table table-striped table-bordered">
    <thead>
        <tr>
        <th>No.</th>
            <th>Order ID</th>
            <th>Order Date</th>
            <th>Ship Address</th>
            <th>Total Pay</th>
            <th>Status</th>
            <th>CustomerId</th>
            <th>Pay Method</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var order in Model)
        {
            <tr>
                <td>@(++indexOrder)</td>
                <td>@order.ID</td>
                <td>@order.OrderDate</td>
                <td>@order.ShipAddress</td>
                <td>@MoneyDTO.Convert(@order.TotalPay)</td>
                <td>@order.Status</td>
                <td>@order.CustomerId</td>
                <td>@order.PayMethod</td>
                <td>
                    <button class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#details-@order.ID" aria-expanded="false" aria-controls="details-@order.ID">
                        Show Details
                    </button>
                    <button class="btn btn-warning" type="button" data-bs-toggle="modal" data-bs-target="#changeStatusModal" data-order-id="@order.ID" onclick="setProductId('@order.ID','order')">
                        Change Status
                    </button>
                </td>
            </tr>
            <tr class="collapse" id="details-@order.ID">
                <td colspan="8">
                    <table class="table table-sm table-bordered">
                        <thead>
                            <tr>
                                <th>No.</th>
                                <th>Product ID</th>
                                <th>Product Type</th>
                                <th>Quantity</th>
                                <th>Price</th>
                                <th>Total Amount</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var detail in order.OrderDetails)
                            {
                                <tr>
                                    <td>@(++indexOrderDetail)</td>
                                    <td>@detail.ProductID</td>
                                    <td>@detail.Product.ProductTypeId</td>
                                    <td>@detail.Quantity</td>
                                    <td>@MoneyDTO.Convert(@detail.Price)</td>
                                    <td>@MoneyDTO.Convert(@detail.TotalAmount)</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Modal for Changing Status -->
<div class="modal fade" id="changeStatusModal" tabindex="-1" aria-labelledby="changeStatusModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="changeStatusForm" method="post" action="/Order/ChangeStatus">
                <div class="modal-header">
                    <h5 class="modal-title" id="changeStatusModalLabel">Change Order Status</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="orderId" id="orderId" />
                    <div class="mb-3">
                        <label for="newStatus" class="form-label">New Status</label>
                        <select class="form-select" name="newStatus" id="newStatus">
                            @{
                                for (int i = 1; i < orderStatuses.ToList().Count; i++)
                                {
                                    <option value="@((int)orderStatuses.ToList()[i])">@orderStatuses.ToList()[i]</option>
                                }
                            }
                        </select>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save changes</button>
                </div>
            </form>
        </div>
    </div>
</div>